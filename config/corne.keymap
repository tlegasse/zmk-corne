/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Home {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE     &kp Q    &kp W        &kp E           &kp R           &kp T          &kp Y            &kp U    &kp I           &kp O        &kp P     &kp DELETE
&kp ESCAPE    &lt 1 A  &mt LCTRL S  &mt LEFT_ALT D  &kp F           &kp G          &kp H            &kp J    &mt LEFT_ALT K  &mt LCTRL L  &kp S     &kp TAB
&kp LEFT_GUI  &kp Z    &kp X        &kp C           &kp V           &kp B          &kp N            &kp M    &kp COMMA       &kp DOT      &kp FSLH  &kp LEFT_BRACKET
                                    &kp LCTRL       &kp LEFT_SHIFT  &lt 3 SPACE    &lt 2 BACKSPACE  &kp RET  &mo 4
            >;
        };

        Nav {
            bindings = <
&trans  &kp HOME  &kp END         &kp LC(PERIOD)  &kp LC(PIPE)  &trans    &trans              &trans          &trans         &kp LC(T)  &kp RIGHT  &trans
&trans  &trans    &kp LC(A)       &kp LC(SLASH)   &kp TAB       &trans    &kp LC(B)           &kp LEFT_ARROW  &trans         &kp PG_UP  &kp PG_DN  &trans
&trans  &trans    &kp DOWN_ARROW  &kp UP_ARROW    &trans        &trans    &kp LC(LEFT_ARROW)  &trans          &kp LC(RIGHT)  &trans     &kp LC(Y)  &trans
                                  &trans          &trans        &trans    &trans              &trans          &trans
            >;
        };

        Numbers {
            bindings = <
&trans  &trans      &trans          &trans        &trans        &trans        &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans        &trans
&trans  &trans      &trans          &trans        &trans        &trans        &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &trans
&trans  &kp C_PLAY  &kp C_PREVIOUS  &kp C_VOL_DN  &kp C_VOL_UP  &kp K_NEXT    &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans        &trans
                                    &trans        &trans        &trans        &trans  &trans        &trans
            >;
        };

        Symbols {
            bindings = <
&trans  &kp LS(Q)         &kp LS(W)   &kp LS(E)     &kp LS(N5)             &kp TILDE           &kp GRAVE         &kp LS(NUMBER_2)   &kp LS(NUMBER_3)  &kp MINUS             &kp EQUAL      &trans
&trans  &kp LS(NUMBER_1)  &kp LS(N7)  &kp SQT       &kp LS(RIGHT_BRACKET)  &kp LS(NUMBER_4)    &kp LS(NUMBER_6)  &kp LS(N9)         &kp LS(N0)        &kp LS(MINUS)         &kp LS(EQUAL)  &trans
&trans  &kp LS(Z)         &kp LS(N8)  &kp LS(APOS)  &kp RIGHT_BRACKET      &trans              &trans            &kp LS(BACKSLASH)  &kp BACKSLASH     &kp LS(LEFT_BRACKET)  &kp LBKT       &trans
                                      &trans        &trans                 &trans              &trans            &trans             &trans
            >;
        };

        BT {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
